using System;

namespace Hiero;
/// <summary>
/// Represents an error with a contract query that passed the gateway node 
/// pre-check and was processed by the gossip node but did not succeed.  It
/// includes additional information returned by the hedera contract 
/// virtual machine.  Transaction fees will have been spent.
/// </summary>
public sealed class ContractException : Exception
{
    /// <summary>
    /// The <see cref="ResponseCode"/> returned by the network.
    /// prior to transaction request expiration.
    /// </summary>
    public ResponseCode Status { get; private set; }
    /// <summary>
    /// The TransactionId ID generated by the library (or client code) 
    /// identifying the request.
    /// </summary>
    public TransactionId TransactionId { get; private set; }
    /// <summary>
    /// If the returned status is <see cref="ResponseCode.InsufficientTxFee"/>
    /// this value will contain the transaction fee necessary to execute the transaction.
    /// </summary>
    public ulong RequiredFee { get; private set; }
    /// <summary>
    /// The results returned from the failed call to the 
    /// smart contract virtual machine.
    /// </summary>
    public ContractCallResult CallResult { get; private set; }
    /// <summary>
    /// Public Constructor.
    /// </summary>
    /// <param name="message">
    /// The message generated by the library describing the 
    /// condition that raised the exception.
    /// </param>
    /// <param name="transaction">
    /// The TransactionId ID of the request that failed.
    /// </param>
    /// <param name="code">
    /// The final <see cref="ResponseCode"/> returned by the network 
    /// prior to transaction request expiration.
    /// </param>
    /// <param name="callResult">
    /// The results returned from the contract, which may include
    /// additional information regarding the error.
    /// </param>
    internal ContractException(string message, TransactionId transaction, ResponseCode code, ulong cost, ContractCallResult callResult) : base(message)
    {
        Status = code;
        TransactionId = transaction;
        RequiredFee = cost;
        CallResult = callResult;
    }
}