using System;

namespace Hiero;
/// <summary>
/// Represents an error with a transaction that passed the gateway node 
/// pre-check and was processed by the network but did not succeed.
/// </summary>
public sealed class TransactionException : Exception
{
    /// <summary>
    /// The <see cref="ResponseCode"/> returned by the network.
    /// prior to transaction request expiration.
    /// </summary>
    public ResponseCode Status { get { return Receipt.Status; } }
    /// <summary>
    /// The TransactionId ID generated by the library (or client code) 
    /// identifying the request.
    /// </summary>
    public TransactionId TransactionId { get { return Receipt.TransactionId; } }
    /// <summary>
    /// The underlying receipt returned from the network that 
    /// caused the exception (or a simulated version if not enough 
    /// information has been returned from the network, such as
    /// a "receipt not found" error.)
    /// </summary>
    public TransactionReceipt Receipt { get; private set; }
    /// <summary>
    /// Internal constructor for cases where a NetworkResult exists.
    /// </summary>
    internal TransactionException(string message, TransactionReceipt receipt) : base(message)
    {
        Receipt = receipt;
    }
}